<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wisdom.iwcs.mapper.system.UserRoleMapper">
    <resultMap id="BaseResultMap" type="com.wisdom.iwcs.domain.system.UserRole">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="role_id" jdbcType="INTEGER" property="roleId"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, role_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from s_user_role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from s_user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.wisdom.iwcs.domain.system.UserRole">
    insert into s_user_role (id, user_id, role_id
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.wisdom.iwcs.domain.system.UserRole">
        insert into s_user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wisdom.iwcs.domain.system.UserRole">
        update s_user_role
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wisdom.iwcs.domain.system.UserRole">
    update s_user_role
    set user_id = #{userId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="deleteLogicByPrimaryKey" parameterType="java.lang.Integer">
    update s_user_role set delete_flag=0 where id = #{id,jdbcType=INTEGER}
  </update>
    <delete id="deleteAll">
    delete from s_user_role
  </delete>
    <update id="deleteAllLogic">
    update s_user_role set delete_flag=0
  </update>
    <insert id="insertBatch" parameterType="java.util.List">
        insert into s_user_role
        (user_id,role_id)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.userId,jdbcType=INTEGER},#{item.roleId,jdbcType=INTEGER})
        </foreach>
    </insert>
    <select id="selectSelective" parameterType="com.wisdom.iwcs.domain.system.UserRole" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from s_user_role
        where 1=1
        <if test="id!=null">
            and id=#{id,jdbcType=INTEGER}
        </if>
        <if test="userId!=null">
            and user_id=#{userId,jdbcType=INTEGER}
        </if>
        <if test="roleId!=null">
            and role_id=#{roleId,jdbcType=INTEGER}
        </if>
    </select>
    <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            update s_user_role
            <set>
                <if test="item.userId!=null">
                    user_id=#{item.userId,jdbcType=INTEGER},
                </if>
                <if test="item.roleId!=null">
                    role_id=#{item.roleId,jdbcType=INTEGER},
                </if>
            </set>
            where
            id = #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>
    <delete id="deleteMore" parameterType="java.util.List">
        delete from s_user_role where id in
        <foreach collection="list" index="index" item="item" separator=",">
            #{item}
        </foreach>
    </delete>
    <update id="deleteMoreLogic" parameterType="java.util.List">
        update s_user_role set delete_flag=0 where id in
        <foreach collection="list" index="index" item="item" separator=",">
            #{item}
        </foreach>
    </update>
    <select id="selectPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from s_user_role
        where 1=1
        <if test="searchKey != null and searchKey != ''">
            and 1=1
        </if>
        <if test="startTime != null">
            and created_time &gt;= #{startTime,jdbcType=BIGINT}
        </if>
        <if test="endTime != null">
            and created_time &lt;= #{endTime,jdbcType=BIGINT}
        </if>
        order by last_modified_time desc
    </select>
    <select id="selectByUserId" resultMap="BaseResultMap">
    SELECT * FROM s_user_role
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
    <select id="selectByUserIdAndCompanyId" resultMap="BaseResultMap">
    SELECT ur.* FROM s_user_role ur left join s_role r on r.id = ur.role_id
    where ur.user_id = #{userId,jdbcType=INTEGER} and r.company_id =  #{companyId,jdbcType=INTEGER} and r.available=1 and r.delete_flag=0
  </select>
    <delete id="deleteByUserId" parameterType="java.lang.Integer">
    delete from s_user_role where user_id= #{userId,jdbcType=INTEGER}
  </delete>

    <select id="getCompanyUserRole" resultMap="BaseResultMap">
    SELECT sur.* from s_user_role sur LEFT join s_role sr ON sur.role_id = sr.id
    where sr.company_id = #{companyId} and sur.user_id =#{userId}
  </select>

    <delete id="deleteUserCompanyRole">
    DELETE FROM s_user_role where user_id=#{userId} and role_id in (
    select id from  s_role where  company_id= #{companyId}
    )
  </delete>
</mapper>
